(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{287:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){var t=this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h2",{attrs:{id:"如何使用docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何使用docker","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何使用docker")]),r("h3",{attrs:{id:"安装docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装docker","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装docker")]),r("p",[t._v("根据各自的环境安装docker")]),r("ul",[r("li",[t._v("mac| window\nhttps://www.docker.com/products/docker-desktop")]),r("li",[t._v("linux\ncurl https://releases.rancher.com/install-docker/17.12.sh | sh")])]),r("h3",{attrs:{id:"初始化nodejs项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#初始化nodejs项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化nodeJs项目")]),r("blockquote",[r("p",[t._v("演示用一个简单的（越简单，越好）")])]),r("ol",[r("li",[t._v("创建文件夹demo")]),r("li",[t._v("npm初始化")]),r("li",[t._v("安装koa")]),r("li",[t._v("修改package.json中的script")])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(' "start": "node app.js",\n')])])]),r("ol",{attrs:{start:"5"}},[r("li",[t._v("新增app.js,创建koa应用")])]),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Koa "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Koa")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello docker'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3000'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app is start'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("ol",{attrs:{start:"6"}},[r("li",[t._v("启动项目")])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("npm run start\n")])])]),r("h3",{attrs:{id:"docker配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker配置","aria-hidden":"true"}},[t._v("#")]),t._v(" docker配置")]),r("ol",[r("li",[t._v("新建.dockerignore文件，表示过滤该类型的文件。类似git的.gitignore")]),r("li",[t._v("新建Dockerfile,构建脚本信息")])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('#制定node镜像的版本\nFROM node:8.9-alpine\n#声明作者\nMAINTAINER robin\n#移动当前目录下面的文件到app目录下\nADD . /app/\n#进入到app目录下面，类似cd\nWORKDIR /app\n#安装依赖\nRUN npm install\n#对外暴露的端口\nEXPOSE 3000\n#程序启动脚本\nCMD ["npm", "start"]\n')])])]),r("h3",{attrs:{id:"docker镜像构建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像构建","aria-hidden":"true"}},[t._v("#")]),t._v(" docker镜像构建")]),r("ol",[r("li",[t._v("docker build -t docker_demo . (点不能少)\ndocker build -t 镜像名 当前目录")]),r("li",[t._v("docker images 查看镜像\n构建完成")])]),r("h3",{attrs:{id:"运行docker容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运行docker容器","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行docker容器")]),r("ol",[r("li",[r("p",[t._v("启动容器\ndocker run -d -p 8088:3000 docker_demo(端口映射，如果不加会随机指派一个端口)\n创建一个新的容器并运行，-d为后台执行，-p 8088:3000前面为主机端口，后面是容器端口。docker_demo镜像名")])]),r("li",[r("p",[t._v("停止容器\ndocker stop docker_demo")])]),r("li",[r("p",[t._v("重启容器\ndocker restart docker_demo")])]),r("li",[r("p",[t._v("杀死容器\ndocker kill -s KILL docker_demo")])]),r("li",[r("p",[t._v("删除容器\ndocker rm -f docker_demo")])]),r("li",[r("p",[t._v("列出容器\ndocker ps")])])]),r("h3",{attrs:{id:"上传镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#上传镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" 上传镜像")]),r("p",[t._v("使用官方的docker hub进行上传")]),r("ol",[r("li",[t._v("登录\ndocker login")]),r("li",[t._v("打标签\ndocker tag docker_demo fangdown/docker_demo\n格式docker tag 标签名 用户名/标签名")]),r("li",[t._v("推送\ndocker push fangdown/docker_demo")]),r("li",[t._v("成功后可以在docker hub查看")])]),r("h3",{attrs:{id:"下载镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#下载镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" 下载镜像")]),r("p",[t._v("在服务器上下载镜像")]),r("ol",[r("li",[r("p",[t._v("docker login")])]),r("li",[r("p",[t._v("docker pull fangdown/docker_demo")])]),r("li",[r("p",[t._v("启动容器")])])]),r("h3",{attrs:{id:"通俗理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通俗理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 通俗理解")]),r("p",[t._v("docker就是把一个现有的nodejs项目搬到一个盒子，在相应的端也下载一个docker，那么下载了这个盒子。"),r("br"),t._v("\n利用公共载体运行某个项目")]),r("h3",{attrs:{id:"docker命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker命令","aria-hidden":"true"}},[t._v("#")]),t._v(" docker命令")]),r("table",[r("thead",[r("tr",[r("th",[t._v("解释")]),r("th",[t._v("命令")])])]),r("tbody",[r("tr",[r("td",[t._v("查看当前docker版本")]),r("td",[t._v("docker -v")])]),r("tr",[r("td",[t._v("查看当前本地所有镜像")]),r("td",[t._v("docker images")])]),r("tr",[r("td",[t._v("构造镜像,用法docker build -t 镜像名称")]),r("td",[t._v("docker build -t docker_demo .")])]),r("tr",[r("td",[t._v("用于容器与主机之间的数据拷贝。用法docker cp 主机文件地址 容器内地址。12d7f14v45cv为容器id。")]),r("td",[t._v("docker cp /www/runoob 12d7f14v45cv:/www/")])]),r("tr",[r("td",[t._v("创建一个新的容器并运行，-d为后台执行，-p 9000:3000前面为主机端口，后面是容器端口。docker_demo镜像名")]),r("td",[t._v("docker run -d -p 9000:3000 docker_demo")])]),r("tr",[r("td",[t._v("启动已被停止的容器")]),r("td",[t._v("docker start docker_demo")])]),r("tr",[r("td",[t._v("关闭已被启动的容器")]),r("td",[t._v("docker stop docker_demo")])]),r("tr",[r("td",[t._v("重新启动容器")]),r("td",[t._v("docker restart docker_demo")])]),r("tr",[r("td",[t._v("杀掉一个运行中的容器。")]),r("td",[t._v("docker kill -s KILL docker_demo")])]),r("tr",[r("td",[t._v("删除一个或多少容器。-f :通过SIGKILL信号强制删除一个运行中的容器-l :移除容器间的网络连接，而非容器本身-v :-v 删除与容器关联的卷")]),r("td",[t._v("docker rm -f docker_demo、docker_demo1")])]),r("tr",[r("td",[t._v("在运行的容器中执行命令。104e28f2f072容器id")]),r("td",[t._v("sudo docker exec -it 104e28f2f072 /bin/bash")])]),r("tr",[r("td",[t._v("列出容器。 -a:所有容器包含没有运行的")]),r("td",[t._v("docker ps")])]),r("tr",[r("td",[t._v("获取容器获取容器的日志 104e28f2f072容器id，-t:显示时间戳")]),r("td",[t._v("docker logs -f -t 104e28f2f072")])]),r("tr",[r("td",[t._v("登陆镜像仓库")]),r("td",[t._v("docker login")])]),r("tr",[r("td",[t._v("获取镜像")]),r("td",[t._v("docker pull")])]),r("tr",[r("td",[t._v("上传镜像")]),r("td",[t._v("docker push")])]),r("tr",[r("td",[t._v("查看指定镜像的创建历史")]),r("td",[t._v("docker history docker_demo")])])])])])}],!1,null,null,null);a.default=s.exports}}]);