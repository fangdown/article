(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{170:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},function(){var a=this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"webpack-打包原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包原理","aria-hidden":"true"}},[a._v("#")]),a._v(" webpack 打包原理")]),e("h3",{attrs:{id:"模块化机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化机制","aria-hidden":"true"}},[a._v("#")]),a._v(" 模块化机制")]),e("h3",{attrs:{id:"核心思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心思想","aria-hidden":"true"}},[a._v("#")]),a._v(" 核心思想")]),e("ol",[e("li",[a._v("一切皆模块（html/css/js/img）,利用require进行引用，这意味着我们可以将事物（业务）分割成更小的易于管理的片段，达到重复利用的目的。")]),e("li",[a._v("按需加载：传统打包工具会将所有的模块打包在一起，生成一个比较大的bundle.js模块，而webpack使用许多特性来分割代码生成多个bundle文件，异步加载部分可以实现按需加载。")])]),e("h3",{attrs:{id:"文件管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件管理","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件管理")]),e("ol",[e("li",[a._v("每个文件都是一个资源，可用通过require或import导入")]),e("li",[a._v("每个入口文件会把自己所依赖的资源全部打包在一起，一个资源多次引用的话，只会打包一份")]),e("li",[a._v("对于多个入口的情况，其实就是分别独立的执行单个入口情况，每个入口文件不相干")])]),e("h3",{attrs:{id:"打包原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 打包原理")]),e("p",[a._v("把所有依赖打包成一个bundle文件，通过代码分割成单元片段并按需加载。")])])}],!1,null,null,null);t.default=s.exports}}]);