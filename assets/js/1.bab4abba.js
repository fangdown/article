(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{205:function(a,n,r){"use strict";r.r(n);var e=r(0),s=Object(e.a)({},function(){var a=this,n=a.$createElement,r=a._self._c||n;return r("div",{staticClass:"content"},[a._ssrNode('<h3 id="js干货"><a href="#js干货" aria-hidden="true" class="header-anchor">#</a> JS干货</h3><h3 id="shiyangzhaoa"><a href="#shiyangzhaoa" aria-hidden="true" class="header-anchor">#</a> shiyangzhaoa</h3>'),a._ssrNode("<p>","</p>",[a._ssrNode('<a href="https://github.com/shiyangzhaoa/easy-tips" target="_blank" rel="noopener noreferrer">',"</a>",[a._ssrNode("原文链接"),r("OutboundLink")],2)]),a._ssrNode('<div class="language-html extra-class"><pre class="language-html"><code>几个版本的快速排序\n查找数组重复项\n扁平化数组\n深克隆\n按数组中各项和特定值差值排序\n斐波那契数列\n创建一个值为下标、长度为100的数组\n求一个页面有多少dom节点\n遍历一颗dom树的结构\n求一颗dom树的最大深度\ndestructuringArray([1, [2, 3], 4], \'[a, [b ], c]\') =&gt; {a: 1, b: 2, c: 3}, 无意中看到的，听说是阿里的面试题？\n求对象最大值的属性 {a: 1, b: 2, c: 3, d: 3} =&gt; 属性为c,值为3\n实现ES6字符模版\n实现一个lazyMan\n一个数组和为某值的成员\n一组数所有的排列情况，例如: [1, 2] =&gt; [\'1-2\', \'2-1\']\n一些额外的tips\n</code></pre></div><h3 id="mqyqingfeng"><a href="#mqyqingfeng" aria-hidden="true" class="header-anchor">#</a> mqyqingfeng</h3>'),a._ssrNode("<p>","</p>",[a._ssrNode('<a href="https://github.com/shiyangzhaoa/easy-tips" target="_blank" rel="noopener noreferrer">',"</a>",[a._ssrNode("原文链接"),r("OutboundLink")],2)]),a._ssrNode('<div class="language-html extra-class"><pre class="language-html"><code>JavaScirpt深入之从原型到原型链\nJavaScript深入之词法作用域和动态作用域\nJavaScript深入之执行上下文栈\nJavaScript深入之变量对象\nJavaScript深入之作用域链\nJavaScript深入之从ECMAScript规范解读this\nJavaScript深入之执行上下文\nJavaScript深入之闭包\nJavaScript深入之参数按值传递\nJavaScript深入之call和apply的模拟实现\nJavaScript深入之bind的模拟实现\nJavaScript深入之new的模拟实现\nJavaScript深入之类数组对象与arguments\nJavaScript深入之创建对象的多种方式以及优缺点\nJavaScript深入之继承的多种方式以及优缺点\nJavaScript深入系列15篇正式完结！\n</code></pre></div>')],2)},[],!1,null,null,null);n.default=s.exports}}]);